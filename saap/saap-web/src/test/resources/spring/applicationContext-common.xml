<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
 		http://www.springframework.org/schema/beans 
 		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
 		http://www.springframework.org/schema/context 
 		http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:annotation-config />

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:init.properties</value>
				<value>classpath:jdbc.properties</value>
				<value>classpath:unitils.properties</value>
			</list>
		</property>
	</bean>

	<!-- i18n -->
	<bean id="messageSource" 
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource" abstract="false">	 	
	 	<property name="useCodeAsDefaultMessage" value="true" /> 
	 	<property name="basenames">
	 		<list>
	 			<value>WEB-INF/messages/common</value>
	 			<value>WEB-INF/messages/exceptions</value>
	 			<value>WEB-INF/messages/menu</value>
	 			<value>WEB-INF/messages/module</value>
	 			<value>WEB-INF/messages/dictparam</value>
	 			<value>WEB-INF/messages/system</value>
	 			<value>WEB-INF/messages/assistant</value>
	 			<value>WEB-INF/messages/personal</value>
	 			<value>WEB-INF/messages/report</value>
	 		</list>
	 	</property>
	</bean>	
	
	<bean id="dataSource" class="org.unitils.database.UnitilsDataSourceFactoryBean" />
	
	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- Oracle9i use this conf
	<bean id="nativeJdbcExtractor" class="org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor"/>

	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler">
	     <property name="nativeJdbcExtractor">
	         <ref bean="nativeJdbcExtractor"/>
	     </property>
	</bean>	
	 -->
	<!-- MySQL、DB2、MS SQL Server、Oracle 10g use this conf -->
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" />

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="hibernateProperties">
			<props>
				 <prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop> 
				<prop key="hibernate.show_sql">
					${hibernate.show_sql}
				</prop>
				<prop key="hibernate.use_sql_comments">
					${hibernate.use_sql_comments}
				</prop>
				<prop key="hibernate.format_sql">
					${hibernate.format_sql}
				</prop>
				<prop key="hibernate.jdbc.batch_size">
					${hibernate.jdbc.batch_size}
				</prop>	
				<prop key="hibernate.cache.provider_class">
					${hibernate.cache.provider_class}
				</prop>
				<prop key="hibernate.cache.use_query_cache">
					${hibernate.cache.use_query_cache}
				</prop>	
				<prop key="hibernate.cache.use_second_level_cache">
					${hibernate.cache.use_second_level_cache}
				</prop>			
			</props>
		</property>
		<property name="lobHandler">
		  <ref local="lobHandler" />
		</property>	
		<property name="dataSource">
			<ref local="dataSource" />
		</property>			
		<property name="mappingLocations">
			<list>
				<value>classpath:hibernate/**/*.hbm.xml</value>
			</list>
		</property>

	</bean>

	<bean id="hibernateTemplate"
		class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>


	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="save*">
					PROPAGATION_REQUIRED,-CheckedBusiException
				</prop>
				<prop key="update*">
					PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-CheckedBusiException
				</prop>
				<prop key="delete*">
					PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-CheckedBusiException
				</prop>
				<prop key="check*">
					PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-CheckedBusiException
				</prop>
				<prop key="do*">
					PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-CheckedBusiException
				</prop>
				<prop key="newTran*">
					PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT,-CheckedBusiException
				</prop>
				<prop key="load*">PROPAGATION_SUPPORTS,readOnly</prop>
				<prop key="list*">PROPAGATION_SUPPORTS,readOnly</prop>
				<prop key="find*">PROPAGATION_SUPPORTS,readOnly</prop>
				<prop key="count*">PROPAGATION_SUPPORTS,readOnly</prop>
			</props>
		</property>
	</bean>
 
	<bean id="ServiceAutoProxyCreator"
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="proxyTargetClass" value="false"></property>
		<property name="beanNames">
			<list>
				<value>*Service</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
			<!-- 
				<value>cachingInterceptor</value>
				<value>flushingInterceptor</value>  -->
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>	
	
	<!-- 事务模板工具，用于实现编程式事务 --> 
	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager"/> 
	</bean>
	 
	<!-- Base class of hibernate DAO -->
	<bean id="hibernateDao" class="com.litt.core.dao.BaseHibernateDao">
		<property name="hibernateTemplate" ref="hibernateTemplate"/> 
	</bean>
	
	<!-- Base class of jdbc DAO -->
	<bean id="jdbcDao" class="com.litt.core.dao.BaseJdbcDao">
		<property name="jdbcTemplate" ref="jdbcTemplate"/>  
	</bean>
	
	<bean id="baseDao" class="com.litt.core.dao.GenericHibernateDao" abstract="true">
		<property name="hibernateTemplate" ref="hibernateTemplate"/>
	</bean>
	
	<bean id="baseService" class="com.litt.core.service.BaseService">
		<property name="hibernateDao" ref="hibernateDao"/>
		<property name="jdbcDao" ref="jdbcDao"/>  
	</bean>
	
	<!-- EventBus -->
	<bean id="eventBus" class="com.litt.core.eventbus.SpringEventBus"></bean>
	
	<bean id="eventBusRegistration" class="com.litt.core.eventbus.EventBusRegisterBeanPostProcessor">
		<property name="eventBus" ref="eventBus"/>
	</bean>
	
	<!-- Database migration -->
	<!-- 
	<bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
      <property ref="dataSource" name="dataSource"></property>
      <property name="changeLog" value="classpath:changelog.xml"></property>
      <property name="contexts" value="test, production"></property>
      <property name="changeLogParameters">
      	<map>
      		<entry key="system.version" value="${system.version}" />
      	</map>
      </property>
  	</bean>   
	 -->
	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	 	<property name="host" value="${smtp.host}"/>
	 	<property name="port" value="${smtp.port}"/>	 	
	 	<property name="username" value="${smtp.username}"/>
	 	<property name="password" value="${smtp.password}"/>
	 	<property name="defaultEncoding" value="UTF-8"></property> 
	 	<property name="protocol" value="smtps" />
	 	<property name="javaMailProperties">
	        <props>
	        	<prop key="mail.debug">true</prop> 
	            <prop key="mail.smtps.auth">true</prop>	            
	            <prop key="mail.transport.protocol">smtps</prop>
	        </props>
    	</property>
	 	<!-- SSL
	 	
	 	<property name="javaMailProperties">
	        <props>
	        	<prop key="mail.debug">true</prop> 
	            <prop key="mail.smtps.auth">true</prop>
	            <prop key="mail.smtp.ssl.enable">true</prop>
	            <prop key="mail.transport.protocol">smtps</prop>
	            <prop key="mail.smtp.starttls.enable">true</prop>
            	<prop key="mail.smtp.starttls.required">true</prop>
	        </props>
    	</property>
    	 -->
	 </bean>
	 
	 <!-- Email Service -->
	 <bean id="emailService" class="com.litt.saap.common.service.impl.EmailServiceImpl">
	 	<property name="from" value="${smtp.from}"/>	
	 </bean>
	 
	 <!-- Gen content from template -->
	 <bean id="templateService" class="com.litt.saap.common.service.impl.TemplateServiceImpl" init-method="init">
	 	<property name="templatePath" value="${template.path}"/>	 	
	 </bean> 
	 
</beans>

